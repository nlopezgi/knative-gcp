# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: eventing.knative.dev/v1beta1
kind: Broker
metadata:
  name: gcp
  namespace: default
  annotations:
    eventing.knative.dev/broker.class: googlecloud
spec: {}

---

apiVersion: eventing.knative.dev/v1beta1
kind: Trigger
metadata:
  name: broker-gcp-receiver01
  namespace: default
spec:
  broker: gcp
  subscriber:
    ref:
      apiVersion: v1
      kind: Service
      name: broker-gcp-receiver01

---

apiVersion: eventing.knative.dev/v1beta1
kind: Trigger
metadata:
  name: broker-gcp-receiver02
  namespace: default
spec:
  broker: gcp
  subscriber:
    ref:
      apiVersion: v1
      kind: Service
      name: broker-gcp-receiver02

---

apiVersion: eventing.knative.dev/v1beta1
kind: Trigger
metadata:
  name: broker-gcp-receiver03
  namespace: default
spec:
  broker: gcp
  subscriber:
    ref:
      apiVersion: v1
      kind: Service
      name: broker-gcp-receiver03

---

apiVersion: eventing.knative.dev/v1beta1
kind: Trigger
metadata:
  name: broker-gcp-receiver04
  namespace: default
spec:
  broker: gcp
  subscriber:
    ref:
      apiVersion: v1
      kind: Service
      name: broker-gcp-receiver04

---

apiVersion: eventing.knative.dev/v1beta1
kind: Trigger
metadata:
  name: broker-gcp-receiver05
  namespace: default
spec:
  broker: gcp
  subscriber:
    ref:
      apiVersion: v1
      kind: Service
      name: broker-gcp-receiver05

---

apiVersion: eventing.knative.dev/v1beta1
kind: Trigger
metadata:
  name: broker-gcp-receiver06
  namespace: default
spec:
  broker: gcp
  subscriber:
    ref:
      apiVersion: v1
      kind: Service
      name: broker-gcp-receiver06

---

apiVersion: eventing.knative.dev/v1beta1
kind: Trigger
metadata:
  name: broker-gcp-receiver07
  namespace: default
spec:
  broker: gcp
  subscriber:
    ref:
      apiVersion: v1
      kind: Service
      name: broker-gcp-receiver07

---

apiVersion: eventing.knative.dev/v1beta1
kind: Trigger
metadata:
  name: broker-gcp-receiver08
  namespace: default
spec:
  broker: gcp
  subscriber:
    ref:
      apiVersion: v1
      kind: Service
      name: broker-gcp-receiver08

---

apiVersion: eventing.knative.dev/v1beta1
kind: Trigger
metadata:
  name: broker-gcp-receiver09
  namespace: default
spec:
  broker: gcp
  subscriber:
    ref:
      apiVersion: v1
      kind: Service
      name: broker-gcp-receiver09

---

apiVersion: eventing.knative.dev/v1beta1
kind: Trigger
metadata:
  name: broker-gcp-receiver10
  namespace: default
spec:
  broker: gcp
  subscriber:
    ref:
      apiVersion: v1
      kind: Service
      name: broker-gcp-receiver10

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: perf-gcpbroker
  namespace: default

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: perf-gcpbroker
subjects:
  - kind: ServiceAccount
    name: perf-gcpbroker
    namespace: default
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: v1
kind: Service
metadata:
  name: broker-gcp-receiver01
spec:
  selector:
    role: broker-gcp-receiver01
  ports:
    - name: http
      port: 80
      targetPort: cloudevents
      protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  name: broker-gcp-receiver02
spec:
  selector:
    role: broker-gcp-receiver02
  ports:
    - name: http
      port: 80
      targetPort: cloudevents
      protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  name: broker-gcp-receiver03
spec:
  selector:
    role: broker-gcp-receiver03
  ports:
    - name: http
      port: 80
      targetPort: cloudevents
      protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  name: broker-gcp-receiver04
spec:
  selector:
    role: broker-gcp-receiver04
  ports:
    - name: http
      port: 80
      targetPort: cloudevents
      protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  name: broker-gcp-receiver05
spec:
  selector:
    role: broker-gcp-receiver05
  ports:
    - name: http
      port: 80
      targetPort: cloudevents
      protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  name: broker-gcp-receiver06
spec:
  selector:
    role: broker-gcp-receiver06
  ports:
    - name: http
      port: 80
      targetPort: cloudevents
      protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  name: broker-gcp-receiver07
spec:
  selector:
    role: broker-gcp-receiver07
  ports:
    - name: http
      port: 80
      targetPort: cloudevents
      protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  name: broker-gcp-receiver08
spec:
  selector:
    role: broker-gcp-receiver08
  ports:
    - name: http
      port: 80
      targetPort: cloudevents
      protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  name: broker-gcp-receiver09
spec:
  selector:
    role: broker-gcp-receiver09
  ports:
    - name: http
      port: 80
      targetPort: cloudevents
      protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  name: broker-gcp-receiver10
spec:
  selector:
    role: broker-gcp-receiver10
  ports:
    - name: http
      port: 80
      targetPort: cloudevents
      protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  name: broker-gcp-aggregator
spec:
  selector:
    role: broker-gcp-aggregator
  ports:
    - name: grpc
      port: 10000
      targetPort: grpc
      protocol: TCP